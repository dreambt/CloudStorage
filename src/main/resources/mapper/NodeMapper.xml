<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.im47.cloud.storage.common.dao.file.NodeMapper">

    <resultMap id="nodeDetailMap" type="Node">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="type" column="type"/>
        <result property="leftSibling" column="left_sibling"/>
        <result property="parentId" column="parent_id"/>
    </resultMap>

    <sql id="nodeColumns">N.id, N.name, N.type, N.left_sibling, N.parent_id</sql>

    <select id="get" parameterType="Long" resultMap="nodeDetailMap">
        SELECT
        <include refid="nodeColumns"/>
        FROM ${appKey}CS_NODE AS N
        WHERE id =#{id}
        LIMIT 1
    </select>

    <select id="getChildren" parameterType="Long" resultMap="nodeDetailMap">
        SELECT
        <include refid="nodeColumns"/>
        FROM ${appKey}CS_NODE AS N
        WHERE parent_id =#{id}
    </select>

    <select id="getRightSibling" parameterType="Long" resultMap="nodeDetailMap">
        SELECT
        <include refid="nodeColumns"/>
        FROM ${appKey}CS_NODE AS N
        WHERE left_sibling =#{id}
    </select>

    <select id="getByName" parameterType="String" resultMap="nodeDetailMap">
        SELECT
        <include refid="nodeColumns"/>
        FROM ${appKey}CS_NODE AS N
        WHERE name =#{nodeName}
    </select>

    <select id="count" resultType="Long">
		SELECT COUNT(id)
		FROM ${appKey}CS_NODE
	</select>

    <insert id="save" parameterType="Node" useGeneratedKeys="true" keyProperty="object.id">
		INSERT INTO ${appKey}CS_NODE(id, name, type, left_sibling, parent_id)
		VALUES (null, #{object.name}, #{object.type}, #{object.leftSibling.id}, #{object.parent.id})
	</insert>

    <delete id="delete">
		DELETE FROM ${appKey}CS_NODE
		WHERE id=#{id}
	</delete>

    <update id="updateBool" parameterType="map">
        UPDATE ${appKey}CS_NODE
        SET ${column}=1-${column}
        WHERE id=#{id}
    </update>

    <update id="update" parameterType="Node">
        UPDATE ${appKey}CS_NODE
        <set>
            <if test="object.name != null and object.name !=''">
                name=#{object.name},
            </if>
            <if test="object.type != null and object.type !=''">
                type=#{object.type},
            </if>
            <if test="object.leftSibling != null">
                left_sibling=#{object.leftSibling.id},
            </if>
            <if test="object.parent.id != null">
                parent_id=#{object.parent.id},
            </if>
        </set>
        WHERE id=#{object.id}
    </update>

    <select id="search" parameterType="map" resultMap="nodeDetailMap">
        select <include refid="nodeColumns"/>
        FROM ${appKey}CS_NODE AS N
        <where>
            1=1
            <if test="parameters.name != null and parameters.name !=''">
                and name=#{parameters.name}
            </if>
            <if test="parameters.type != null and parameters.type !=''">
                and type=#{parameters.type}
            </if>
            <if test="parameters.leftSibling != null">
                and left_sibling=#{parameters.leftSibling.id}
            </if>
        </where>
        <if test="parameters.Sort != null and parameters.Sort!=''">
            ORDER BY N.${parameters.Sort} ${parameters.Direction}
        </if>
        <if test="parameters.limit != null and parameters.limit>0">
            LIMIT ${parameters.offset}, ${parameters.limit}
        </if>
    </select>
</mapper>