<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
    <display-name>Cloud Storage</display-name>
	
    <!-- Spring ApplicationContext配置文件的路径,可使用通配符，用于后面的Spring Context Loader -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:/applicationContext.xml
            classpath*:/applicationContext-other.xml
        </param-value>
    </context-param>

    <!-- 設定Spring Context的默认Profile -->
    <context-param>
        <param-name>spring.profiles.default</param-name>
        <param-value>production</param-value>
    </context-param>

    <!--Spring的ApplicationContext 载入 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- Apache Ftp Server -->
    <listener>
        <listener-class>cn.im47.cloud.storage.ftp.FtpServerListener</listener-class>
    </listener>

    <!-- Spring MVC Servlet -->
    <servlet>
        <servlet-name>springServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/spring-mvc.xml</param-value>
        </init-param>
        <init-param>
            <param-name>spring.profiles.active</param-name>
            <param-value>production</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- JMX JSON Agent servlet-->
    <servlet>
        <servlet-name>jolokia-agent</servlet-name>
        <servlet-class>org.jolokia.http.AgentServlet</servlet-class>
        <load-on-startup>3</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>jolokia-agent</servlet-name>
        <url-pattern>/jolokia/*</url-pattern>
    </servlet-mapping>

    <!-- Filter 定义  -->
    <!-- Content Servlet 配置 -->
    <servlet>
        <servlet-name>StaticContentServlet</servlet-name>
        <servlet-class>cn.im47.commons.web.StaticContentServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>StaticContentServlet</servlet-name>
        <url-pattern>/static-content</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>RemoteContentServlet</servlet-name>
        <servlet-class>cn.im47.commons.web.RemoteContentServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>RemoteContentServlet</servlet-name>
        <url-pattern>/remote-content</url-pattern>
    </servlet-mapping>

    <!-- 合并 js 和 CSS 文件 -->
    <servlet>
        <servlet-name>Merpressor</servlet-name>
        <servlet-class>cn.im47.commons.utilities.merpressor.Merpressor</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>Merpressor</servlet-name>
        <url-pattern>/min</url-pattern>
    </servlet-mapping>

    <!-- 验证码 Servlet 配置-->
    <servlet>
        <servlet-name>CaptchaContentServlet</servlet-name>
        <servlet-class>cn.im47.commons.web.CaptchaContentServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>CaptchaContentServlet</servlet-name>
        <url-pattern>/captcha.png</url-pattern>
    </servlet-mapping>

    <!-- Apache Ftp Server 监控 -->
    <servlet>
        <servlet-name>status</servlet-name>
        <servlet-class>cn.im47.cloud.storage.ftp.FtpServerServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>status</servlet-name>
        <url-pattern>/ftp-status</url-pattern>
    </servlet-mapping>

    <!-- Filter 定义 -->
    <!-- Character Encoding filter -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <!-- Shiro Security filter-->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Cache Control Header Filter -->
    <filter>
        <filter-name>cacheControlHeaderFilter</filter-name>
        <filter-class>cn.im47.commons.web.CacheControlHeaderFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>cacheControlHeaderFilter</filter-name>
        <url-pattern>/static/*</url-pattern>
    </filter-mapping>

    <!-- Sitemesh filter -->
    <filter>
        <filter-name>sitemeshFilter</filter-name>
        <filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>sitemeshFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Gzip compression for jetty -->
    <filter>
        <filter-name>jettyGzipFilter</filter-name>
        <filter-class>org.eclipse.jetty.servlets.GzipFilter</filter-class>
        <init-param>
            <param-name>mimeTypes</param-name>
            <param-value>
                text/html,text/plain,text/xml,application/xhtml+xml,text/css,application/javascript,application/json,image/svg+xml
            </param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>jettyGzipFilter</filter-name>
        <url-pattern>/static/*</url-pattern>
    </filter-mapping>

    <!-- session超时定义,单位为分钟 -->
    <session-config>
        <session-timeout>20</session-timeout>
    </session-config>

    <!-- 配置Web应用的首页列表 -->
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <!-- 出错页面定义 -->
    <error-page>
        <exception-type>java.lang.Throwable</exception-type>
        <location>/WEB-INF/views/error/500.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/WEB-INF/views/error/500.jsp</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/WEB-INF/views/error/404.jsp</location>
    </error-page>

    <!-- Tomcat部署时提示找不到 -->
    <jsp-config>
        <taglib>
            <taglib-uri>http://java.sun.com/jsp/jstl/core</taglib-uri>
            <taglib-location>/WEB-INF/taglib/c.tld</taglib-location>
        </taglib>
        <taglib>
            <taglib-uri>http://java.sun.com/jsp/jstl/fmt</taglib-uri>
            <taglib-location>/WEB-INF/taglib/fmt.tld</taglib-location>
        </taglib>
        <taglib>
            <taglib-uri>http://java.sun.com/jsp/jstl/functions</taglib-uri>
            <taglib-location>/WEB-INF/taglib/fn.tld</taglib-location>
        </taglib>
    </jsp-config>
</web-app>
